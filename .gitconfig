
##   The following aliases are
##   Supporting "The Phlow" described in:
##
##     www.praqma.com/stories/a-pragmatic-workflow/
##
##   Details on the actual planning process
##   Can be found in:
##
##     www.praqma.com/stories/milestones-and-officehours/
##
##   The Phlow is maintained at:
##
##     github.com/Praqma/the-phlow
##
##   The following aliases should be copied into your .gitconfig
##   in the [alias]  section. Run 'git config --global --edit'

[alias]

  addremove = add -A .
	co = checkout
	work-on	= "!f() { \
		  BRANCHNAME=`git issue-branch $1`; \
			git fetch origin; \
			git co $BRANCHNAME   2> /dev/null \
			|| git co -b $BRANCHNAME origin/`git default-branch`; \
			git issue-wip $1; \
			ghi assign $1; \
		}; f"
  issue-branch = "!f() { \
		  MATCH=[#â†‘]$1:; \
			ghi show $1 2>/dev/null \
			| grep $MATCH \
			| sed   s/$MATCH/$1/g \
			| sed 's/ /-/g' \
			| sed s/[:\\'\\/\\\"]//g; \
		}; f"
	default-branch = "!f() { \
		  curl -s 'https://api.github.com/repos/'`git hub-name` \
			| grep 'default_branch' \
			| cut -d ':' -f2 \
			|  sed s/[\\ ,\\\"]//g; \
		}; f"
	hub-name =  "!f() { \
		  git config --get remote.origin.url \
			|	cut -d ':' -f2 \
			| sed s/.git$//g; \
		}; f"
  issue-wip = "!f() { \
		  ghi label $1 'Status - in progress'; \
		}; f"
	wrapup = "!f() { \
		  MSG='close #'`git symbolic-ref --short HEAD | sed 's/-/ /g'`; \
			echo $MSG > ~/WRAPUP_EDITMSG; \
			git addremove; \
			git commit -F ~/WRAPUP_EDITMSG; \
			rm ~/WRAPUP_EDITMSG; \
		}; f"
	deliver = "!f() { \
		  BRANCH=`git symbolic-ref --short HEAD`; \
			if [[ $BRANCH =~ ^delivered/ || $BRANCH == `git default-branch` ]]; \
			then \
        echo 'Come on! - You can't deliver this branch!; \
      else \
	  		git push origin $BRANCH:ready/$BRANCH \
		  	&& git branch -m delivered/$BRANCH; \
      fi; \
		}; f"
  purge-all-delivered = "!f() { \
		  git co `git default-branch`; \
			git branch | grep 'delivered/' \
			| sed 's/delivered\\///g' \
			| xargs -I %br sh -c 'git branch -D delivered/%br; \
			git push origin :%br' 2>/dev/null; \
			git fetch --prune; \
		}; f "
